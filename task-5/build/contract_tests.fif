"Asm.fif" include
// automatically generated from `/home/borys/.config/toncli/func-libs/stdlib-tests.func` `/home/borys/.config/toncli/func-libs/tests-helpers.func` `/home/borys/ton-func-contest1/task-5/tests/example.fc` 
PROGRAM{
  85860 DECLMETHOD get_c7
  116994 DECLMETHOD get_c7_now
  122414 DECLMETHOD public_key1
  126541 DECLMETHOD public_key2
  124921 DECLMETHOD gen_keys_data
  0 DECLMETHOD test_example_data
  1 DECLMETHOD test_example
  get_c7 PROC:<{
    // 
    124711402 PUSHINT	//  _2=124711402
    0 PUSHINT	//  _2=124711402 _3=0
    DUP	//  _2=124711402 _3=0 _4=0
    NOW	//  _2=124711402 _3=0 _4=0 _5
    1 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1
    DUP	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1
    239 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239
    1000000000 PUSHINT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _10=1000000000
    PUSHNULL	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _10=1000000000 _11
    PAIR	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12
    MYADDR	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12 _13
    CONFIGROOT	//  _2=124711402 _3=0 _4=0 _5 _6=1 _7=1 _8=239 _12 _13 _14
    10 TUPLE	//  _15
    SINGLE	//  _16
  }>
  get_c7_now PROC:<{
    //  now
    124711402 PUSHINT	//  now _3=124711402
    0 PUSHINT	//  now _3=124711402 _4=0
    DUP	//  now _3=124711402 _4=0 _5=0
    1 PUSHINT	//  now _3=124711402 _4=0 _5=0 _6=1
    DUP	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1
    239 PUSHINT	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239
    1000000000 PUSHINT	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239 _10=1000000000
    PUSHNULL	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239 _10=1000000000 _11
    PAIR	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239 _12
    PUSHNULL	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239 _12 _13
    CONFIGROOT	//  now _3=124711402 _4=0 _5=0 _6=1 _7=1 _8=239 _12 _13 _14
    s8 s9 XCHG
    s7 s8 XCHG
    s6 s7 XCHG	//  _3=124711402 _4=0 _5=0 now _6=1 _7=1 _8=239 _12 _13 _14
    10 TUPLE	//  _15
    SINGLE	//  _16
  }>
  public_key1 PROC:<{
    // 
    104799641691358652485037262418759809164004453704208373724942556454738117598488 PUSHINT	//  _0=104799641691358652485037262418759809164004453704208373724942556454738117598488
  }>
  public_key2 PROC:<{
    // 
    91234107677694585838545992485446692046175653029634843590114056593110131956063 PUSHINT	//  _0=91234107677694585838545992485446692046175653029634843590114056593110131956063
  }>
  gen_keys_data PROC:<{
    // 
    public_key2 INLINECALLDICT	//  _0
    public_key1 INLINECALLDICT	//  _0 _1
    NEWC	//  _0 _1 _2
    256 STU	//  _0 _4
    256 STU	//  _6
    ENDC	//  _7
  }>
  test_example_data PROC:<{
    // 
    90427 PUSHINT	//  function_selector=90427
    public_key1 INLINECALLDICT	//  function_selector=90427 public_key1
    public_key2 INLINECALLDICT	//  function_selector=90427 public_key1 public_key2
    PAIR	//  function_selector=90427 stack
    NEWC	//  function_selector=90427 stack _10
    ENDC	//  function_selector=90427 stack data
    100 PUSHINT	//  function_selector=90427 stack data _13=100
    get_c7_now INLINECALLDICT	//  function_selector=90427 stack data _14
    PUSHNULL	//  function_selector=90427 stack data _14 _15
    5 TUPLE	//  _12
  }>
  test_example PROC:<{
    //  exit_code data stack actions gas
    s2 s3 XCHG
    3 BLKDROP	//  exit_code stack
    SWAP	//  stack exit_code
    0 NEQINT	//  stack _7
    101 THROWIF
    FIRST	//  generated_data
    gen_keys_data INLINECALLDICT	//  generated_data expected_data
    SWAP	//  expected_data generated_data
    CTOS	//  expected_data _14
    SWAP	//  _14 expected_data
    CTOS	//  _14 _15
    SDEQ	//  _16
    NOT	//  _17
    102 THROWIF
  }>
}END>c
